function [gfit, gof]=gauss2dfit(rdata)
    nl=floor(length(rdata)/2); % assume that the block is perfectly square and centered at (0,0).
    
    [mx, my]=meshgrid(-nl:nl, -nl:nl); %create a meshgrid for fitting
    
    
    % function [fitresult, gof] = createFit(MX, MY, A)
    %CREATEFIT(MX,MY,A)
    %  Create a fit.
    %
    %  Data for 'gauss2dfit' fit:
    %      X Input : MX
    %      Y Input : MY
    %      Z Output: A
    %  Output:
    %      fitresult : a fit object representing the fit.
    %      gof : structure with goodness-of fit info.
    %
    %  See also FIT, CFIT, SFIT.
    
    %  Auto-generated by MATLAB on 23-Feb-2016 14:35:25
    
    
    %t: 'gauss2dfit'.
    [xData, yData, zData] = prepareSurfaceData(mx, my, rdata);
    
    % Set up fittype and options.
    ft = fittype( 'a*exp(-b*(x-c).^2-d*(y-e).^2)+f', 'independent', {'x', 'y'}, 'dependent', 'z' );
    opts = fitoptions( ft );
    opts.Display = 'Off';
    opts.Lower = [0.001 1.0e-06 -nl  1.0e-06 -nl 0];
    opts.Robust = 'Bisquare';
    
    a_est=max(max(rdata));
    b_est=0.01;
    c_est=0;
    d_est=0.01;
    e_est=0;
    f_est=min(min(rdata))/2;
    
    opts.StartPoint = [a_est-f_est b_est c_est d_est e_est f_est];
    opts.Upper = [inf 10 nl 10 nl a_est];
    
    % Fit model to data.
    [gfit, gof] = fit( [xData, yData], zData, ft, opts );
    
% %     Plot fit with data.
%     figure( 'Name', 'gauss2dfit' );
%     h = plot( gfit, [xData, yData], zData );
%     legend( h, 'gauss2dfit', 'A vs. MX, MY', 'Location', 'NorthEast' );
%     % Label axes
%     xlabel( 'MX' );
%     ylabel( 'MY' );
%     zlabel( 'A' );
%     grid on;
%     view( 8.5, 90 );
%     
end